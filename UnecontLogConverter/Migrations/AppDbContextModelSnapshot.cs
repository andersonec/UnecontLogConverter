// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnecontLogConverter.Infrastructure.Data;

namespace UnecontLogConverter.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UnecontLogConverter.Entities.Log", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContentSerialized");

                    b.Property<DateTime>("CreatedAt");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("UnecontLogConverter.Entities.LogTransformed", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Fields");

                    b.Property<string>("LogId")
                        .IsRequired();

                    b.Property<string>("TransformedContentSerialized");

                    b.Property<string>("Version");

                    b.HasKey("Id");

                    b.HasIndex("LogId")
                        .IsUnique();

                    b.ToTable("LogsTransformed");
                });

            modelBuilder.Entity("UnecontLogConverter.Entities.LogTransformed", b =>
                {
                    b.HasOne("UnecontLogConverter.Entities.Log", "OriginalLog")
                        .WithOne("TransformedLog")
                        .HasForeignKey("UnecontLogConverter.Entities.LogTransformed", "LogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
